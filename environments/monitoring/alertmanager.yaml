# environments/monitoring/alertmanager.yaml
alertmanager:
  extraSecretMounts:
    - name: slack-webhook-secret-volume
      secretName: alertmanager-slack-webhook 
      mountPath: /etc/alertmanager/secrets 
      readOnly: true

  config:
    global:
      slack_api_url_file: '/etc/alertmanager/secrets/SLACK_WEBHOOK_URL'

    route:
      group_by: ['alertname', 'job', 'severity']
      group_wait: 30s
      group_interval: 30m
      repeat_interval: 1h
      receiver: 'slack-notifications'
      routes:
        # 보안 Critical 알림은 즉시 전송
        - receiver: 'security-critical-notifications'
          matchers:
            - severity = "critical"
            - alertname =~ "GuardDuty.*|DDoS.*|CloudTrail.*"
          group_wait: 0s
          repeat_interval: 15m
          continue: false

        # 일반 Critical 알림
        - receiver: 'slack-notifications'
          matchers:
            - severity = "critical"
          continue: true

    receivers:
      - name: 'slack-notifications'
        slack_configs:
          - channel: '#k8s-alert'
            send_resolved: true
            title: '[{{ .Status | toUpper }}] {{ .CommonLabels.alertname }} ({{ .CommonLabels.severity | toUpper }})'
            text: |
              *Summary:* {{ .CommonAnnotations.summary }}
              *Description:* {{ .CommonAnnotations.description }}
              *Instance:* `{{ .CommonLabels.instance }}`

      - name: 'security-critical-notifications'
        slack_configs:
          - channel: '#security-alerts'
            send_resolved: true
            color: 'danger'
            title: '🚨 [SECURITY CRITICAL] {{ .CommonLabels.alertname }}'
            text: |
              *🔴 CRITICAL SECURITY ALERT 🔴*
              
              *Alert:* {{ .CommonLabels.alertname }}
              *Summary:* {{ .CommonAnnotations.summary }}
              *Description:* {{ .CommonAnnotations.description }}
              *Instance:* `{{ .CommonLabels.instance }}`

# 2. Prometheus 알림 규칙
prometheus:
  prometheusSpec:
    ruleSelector:
      matchLabels: {}
    ruleNamespaceSelector:
      matchLabels: {}

serverFiles:
  rules:
    # 기존 노드 알림
    node-alerts.yml:
      groups:
        - name: NodeMetrics
          rules:
            - alert: NodeHighCpuUsage
              expr: (1 - avg by (instance) (rate(node_cpu_seconds_total{mode="idle"}[5m]))) * 100 > 80
              for: 5m
              labels:
                severity: warning
              annotations:
                summary: "High CPU Usage on Node"
                description: "CPU usage on instance {{ $labels.instance }} is over 80% for the last 5 minutes."

            - alert: NodeHighMemoryUsage
              expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 85
              for: 5m
              labels:
                severity: warning
              annotations:
                summary: "High Memory Usage on Node"
                description: "Memory usage on instance {{ $labels.instance }} is over 85% for the last 5 minutes."

    # 기존 애플리케이션 알림
    application-alerts.yml:
      groups:
        - name: ApplicationStatus
          rules:
            - alert: KubeDeploymentReplicasMismatch
              expr: kube_deployment_spec_replicas{namespace="monitoring"} != kube_deployment_status_replicas_available{namespace="monitoring"}
              for: 2m
              labels:
                severity: critical
              annotations:
                summary: "Deployment replicas mismatch"
                description: "Deployment {{ $labels.deployment }} in namespace {{ $labels.namespace }} does not have the desired number of available replicas."

            - alert: PrometheusDown
              expr: up{job="prometheus-k8s"} == 0
              for: 1m
              labels:
                severity: critical
              annotations:
                summary: "Prometheus is down"
                description: "The Prometheus instance {{ $labels.instance }} is down."

    # 기본 네트워크 보안 알림 (AWS 없이도 동작)
    network-security-alerts.yml:
      groups:
        - name: NetworkSecurity
          rules:
            - alert: HighNetworkTraffic
              expr: rate(node_network_receive_bytes_total[5m]) > 10485760  # 10MB/s
              for: 5m
              labels:
                severity: warning
              annotations:
                summary: "High Network Traffic"
                description: "High network traffic on {{ $labels.instance }}, interface {{ $labels.device }}: {{ $value | humanize }}B/s"

            - alert: HighConnectionCount
              expr: node_netstat_Tcp_CurrEstab > 1000
              for: 5m
              labels:
                severity: warning
              annotations:
                summary: "High TCP Connection Count"
                description: "Node {{ $labels.instance }} has {{ $value }} established TCP connections."